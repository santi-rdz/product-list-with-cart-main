/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-rose-50: #fcf8f6;
    --color-rose-100: #f5eeec;
    --color-rose-200: oklch(89.2% 0.058 10.001);
    --color-rose-300: #caafa7;
    --color-rose-400: #ad8a85;
    --color-rose-500: #87635a;
    --color-rose-900: #260f08;
    --color-white: #fff;
    --spacing: 0.25rem;
    --font-weight-normal: 400;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-red-burnt: #c73b0f;
    --animate-loading: loading 1s linear infinite alternate;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-1\/2 {
    right: calc(1/2 * 100%);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .z-5 {
    z-index: 5;
  }
  .z-10 {
    z-index: 10;
  }
  .z-20 {
    z-index: 20;
  }
  .my-container {
    width: min(90%, 90rem);
    margin-inline: auto;
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-9 {
    margin-top: calc(var(--spacing) * 9);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .my-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 24px;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .size-5 {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
  }
  .size-6 {
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
  }
  .size-14 {
    width: calc(var(--spacing) * 14);
    height: calc(var(--spacing) * 14);
  }
  .h-64 {
    height: calc(var(--spacing) * 64);
  }
  .h-\[1px\] {
    height: 1px;
  }
  .h-fit {
    height: fit-content;
  }
  .h-full {
    height: 100%;
  }
  .max-h-96 {
    max-height: calc(var(--spacing) * 96);
  }
  .max-h-\[9rem\] {
    max-height: 9rem;
  }
  .w-40 {
    width: calc(var(--spacing) * 40);
  }
  .w-dvw {
    width: 100dvw;
  }
  .w-full {
    width: 100%;
  }
  .grow {
    flex-grow: 1;
  }
  .translate-x-1\/2 {
    --tw-translate-x: calc(1/2 * 100%);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-0\.5 {
    --tw-translate-y: calc(var(--spacing) * 0.5);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-1\/2 {
    --tw-translate-y: calc(1/2 * 100%);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .scale-75 {
    --tw-scale-x: 75%;
    --tw-scale-y: 75%;
    --tw-scale-z: 75%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-100 {
    --tw-scale-x: 100%;
    --tw-scale-y: 100%;
    --tw-scale-z: 100%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-6 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-8 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-\[3px\] {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(3px * var(--tw-space-y-reverse));
      margin-block-end: calc(3px * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .self-center {
    align-self: center;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .scroll-smooth {
    scroll-behavior: smooth;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .rounded-t-xl {
    border-top-left-radius: var(--radius-xl);
    border-top-right-radius: var(--radius-xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-rose-100 {
    border-color: var(--color-rose-100);
  }
  .border-rose-200 {
    border-color: var(--color-rose-200);
  }
  .border-rose-300 {
    border-color: var(--color-rose-300);
  }
  .border-rose-400 {
    border-color: var(--color-rose-400);
  }
  .border-white {
    border-color: var(--color-white);
  }
  .bg-red-burnt {
    background-color: var(--color-red-burnt);
  }
  .bg-rose-50 {
    background-color: var(--color-rose-50);
  }
  .bg-rose-900\/40 {
    background-color: color-mix(in srgb, #260f08 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-rose-900) 40%, transparent);
    }
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .object-cover {
    object-fit: cover;
  }
  .object-center {
    object-position: center;
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-10 {
    padding-block: calc(var(--spacing) * 10);
  }
  .py-\[clamp\(1\.25rem\,-0\.2465rem\+6\.385vw\,5\.5rem\)\] {
    padding-block: clamp(1.25rem, -0.2465rem + 6.385vw, 5.5rem);
  }
  .pr-2 {
    padding-right: calc(var(--spacing) * 2);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .text-center {
    text-align: center;
  }
  .text-1 {
    font-size: 2.5rem;
    line-height: 1.2;
    letter-spacing: 0px;
  }
  .text-2 {
    font-size: 1.5rem;
    line-height: 1.25;
  }
  .text-3 {
    font-size: 1rem;
    line-height: 1.5;
  }
  .text-4 {
    font-size: 0.875rem;
    line-height: 1.5;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-nowrap {
    text-wrap: nowrap;
  }
  .text-red-burnt {
    color: var(--color-red-burnt);
  }
  .text-rose-500 {
    color: var(--color-rose-500);
  }
  .text-rose-900 {
    color: var(--color-rose-900);
  }
  .text-white {
    color: var(--color-white);
  }
  .opacity-100 {
    opacity: 100%;
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-rose-500\/40 {
    --tw-shadow-color: color-mix(in srgb, #87635a 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-rose-500) 40%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .transition-\[opacity_scale\] {
    transition-property: opacity scale;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[opacity_transform_color_shadow\] {
    transition-property: opacity transform color shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[transform_background-color_shadow\] {
    transition-property: transform background-color shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[transform_opacity\] {
    transition-property: transform opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .group-hover\:scale-110 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-scale-x: 110%;
        --tw-scale-y: 110%;
        --tw-scale-z: 110%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .group-hover\:fill-rose-900 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        fill: var(--color-rose-900);
      }
    }
  }
  .group-hover\/controls\:fill-red-burnt {
    &:is(:where(.group\/controls):hover *) {
      @media (hover: hover) {
        fill: var(--color-red-burnt);
      }
    }
  }
  .hover\:scale-105 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:border-red-burnt {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-red-burnt);
      }
    }
  }
  .hover\:border-rose-900 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-rose-900);
      }
    }
  }
  .hover\:bg-rose-50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-rose-50);
      }
    }
  }
  .hover\:bg-white {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-white);
      }
    }
  }
  .hover\:text-red-burnt {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-burnt);
      }
    }
  }
  .hover\:opacity-90 {
    &:hover {
      @media (hover: hover) {
        opacity: 90%;
      }
    }
  }
  .hover\:shadow-lg {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:shadow-sm {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:shadow-xs {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:shadow-red-burnt {
    &:hover {
      @media (hover: hover) {
        --tw-shadow-color: #c73b0f;
        @supports (color: color-mix(in lab, red, red)) {
          --tw-shadow-color: color-mix(in oklab, var(--color-red-burnt) var(--tw-shadow-alpha), transparent);
        }
      }
    }
  }
  .active\:block {
    &.active {
      display: block;
    }
  }
  .max-xl\:top-4 {
    @media (width < 1192px) {
      top: calc(var(--spacing) * 4);
    }
  }
  .\32 xs\:max-h-\[14rem\] {
    @media (width >= 390px) {
      max-height: 14rem;
    }
  }
  .xs\:inset-0 {
    @media (width >= 583px) {
      inset: calc(var(--spacing) * 0);
    }
  }
  .xs\:m-auto {
    @media (width >= 583px) {
      margin: auto;
    }
  }
  .xs\:h-fit {
    @media (width >= 583px) {
      height: fit-content;
    }
  }
  .xs\:w-3\/4 {
    @media (width >= 583px) {
      width: calc(3/4 * 100%);
    }
  }
  .xs\:rounded-xl {
    @media (width >= 583px) {
      border-radius: var(--radius-xl);
    }
  }
  .xs\:p-10 {
    @media (width >= 583px) {
      padding: calc(var(--spacing) * 10);
    }
  }
  .xl\:static {
    @media (width >= 1192px) {
      position: static;
    }
  }
  .xl\:mt-0 {
    @media (width >= 1192px) {
      margin-top: calc(var(--spacing) * 0);
    }
  }
  .xl\:hidden {
    @media (width >= 1192px) {
      display: none;
    }
  }
  .xl\:max-h-\[15rem\] {
    @media (width >= 1192px) {
      max-height: 15rem;
    }
  }
  .xl\:grid-cols-\[70fr_30fr\] {
    @media (width >= 1192px) {
      grid-template-columns: 70fr 30fr;
    }
  }
  .xl\:gap-8 {
    @media (width >= 1192px) {
      gap: calc(var(--spacing) * 8);
    }
  }
  .xl\:py-0 {
    @media (width >= 1192px) {
      padding-block: calc(var(--spacing) * 0);
    }
  }
  .sm\:max-h-\[14rem\] {
    @media (width >= 40rem) {
      max-height: 14rem;
    }
  }
  .sm\:p-10 {
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 10);
    }
  }
  .md\:max-h-\[17rem\] {
    @media (width >= 48rem) {
      max-height: 17rem;
    }
  }
  .lg\:max-h-\[12rem\] {
    @media (width >= 64rem) {
      max-height: 12rem;
    }
  }
  .lg\:max-w-\[700px\] {
    @media (width >= 64rem) {
      max-width: 700px;
    }
  }
  .lg\:items-start {
    @media (width >= 64rem) {
      align-items: flex-start;
    }
  }
  .controls-active\:flex {
    &:where(.controls-active, .controls-active *) {
      display: flex;
    }
  }
  .controls-active\:hidden {
    &:where(.controls-active, .controls-active *) {
      display: none;
    }
  }
  .controls-active\:shadow-\[0_0_0_2px_\#c73b0f\] {
    &:where(.controls-active, .controls-active *) {
      --tw-shadow: 0 0 0 2px var(--tw-shadow-color, #c73b0f);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .skeleton\:block {
    &:where(.skeleton, .skeleton *) {
      display: block;
    }
  }
  .skeleton\:hidden {
    &:where(.skeleton, .skeleton *) {
      display: none;
    }
  }
  .skeleton\:h-5 {
    &:where(.skeleton, .skeleton *) {
      height: calc(var(--spacing) * 5);
    }
  }
  .skeleton\:h-10 {
    &:where(.skeleton, .skeleton *) {
      height: calc(var(--spacing) * 10);
    }
  }
  .skeleton\:w-1\/4 {
    &:where(.skeleton, .skeleton *) {
      width: calc(1/4 * 100%);
    }
  }
  .skeleton\:w-1\/6 {
    &:where(.skeleton, .skeleton *) {
      width: calc(1/6 * 100%);
    }
  }
  .skeleton\:w-5\/6 {
    &:where(.skeleton, .skeleton *) {
      width: calc(5/6 * 100%);
    }
  }
  .skeleton\:animate-loading {
    &:where(.skeleton, .skeleton *) {
      animation: var(--animate-loading);
    }
  }
  .skeleton\:space-y-1\.5 {
    &:where(.skeleton, .skeleton *) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 1.5) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 1.5) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .skeleton\:space-y-2 {
    &:where(.skeleton, .skeleton *) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .skeleton\:rounded-md {
    &:where(.skeleton, .skeleton *) {
      border-radius: var(--radius-md);
    }
  }
  .max-xl\:isSticky\:fixed {
    @media (width < 1192px) {
      &.isSticky {
        position: fixed;
      }
    }
  }
  .max-xl\:isSticky\:left-1\/2 {
    @media (width < 1192px) {
      &.isSticky {
        left: calc(1/2 * 100%);
      }
    }
  }
  .max-xl\:isSticky\:w-\[95\%\] {
    @media (width < 1192px) {
      &.isSticky {
        width: 95%;
      }
    }
  }
  .max-xl\:isSticky\:-translate-x-1\/2 {
    @media (width < 1192px) {
      &.isSticky {
        --tw-translate-x: calc(calc(1/2 * 100%) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .max-xl\:isSticky\:bg-rose-50\/95 {
    @media (width < 1192px) {
      &.isSticky {
        background-color: color-mix(in srgb, #fcf8f6 95%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-rose-50) 95%, transparent);
        }
      }
    }
  }
  .max-xl\:isSticky\:px-4 {
    @media (width < 1192px) {
      &.isSticky {
        padding-inline: calc(var(--spacing) * 4);
      }
    }
  }
  .max-xl\:isSticky\:shadow-\[0px_0px_5px_1px_\#87635a\] {
    @media (width < 1192px) {
      &.isSticky {
        --tw-shadow: 0px 0px 5px 1px var(--tw-shadow-color, #87635a);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .max-xl\:isSticky\:\[\&_span\]\:flex {
    @media (width < 1192px) {
      &.isSticky {
        & span {
          display: flex;
        }
      }
    }
  }
  .max-xl\:isSticky\:\[\&\>a\]\:-translate-x-6 {
    @media (width < 1192px) {
      &.isSticky {
        &>a {
          --tw-translate-x: calc(var(--spacing) * -6);
          translate: var(--tw-translate-x) var(--tw-translate-y);
        }
      }
    }
  }
  .max-xl\:isSticky\:\[\&\>a\]\:scale-65 {
    @media (width < 1192px) {
      &.isSticky {
        &>a {
          --tw-scale-x: 65%;
          --tw-scale-y: 65%;
          --tw-scale-z: 65%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .max-xl\:isSticky\:\[\&\>a\:last-child\]\:translate-x-1 {
    @media (width < 1192px) {
      &.isSticky {
        &>a:last-child {
          --tw-translate-x: calc(var(--spacing) * 1);
          translate: var(--tw-translate-x) var(--tw-translate-y);
        }
      }
    }
  }
  .max-xl\:isSticky\:\[\&\>a\:last-child\]\:scale-85 {
    @media (width < 1192px) {
      &.isSticky {
        &>a:last-child {
          --tw-scale-x: 85%;
          --tw-scale-y: 85%;
          --tw-scale-z: 85%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
}
@font-face {
  font-family: "hat";
  src: url("assets/fonts/RedHatText-VariableFont_wght.ttf");
  font-style: normal;
}
.controls, .btn-add {
  @starting-style {
    opacity: 0;
    scale: 0.75;
  }
}
.confirm-order {
  @starting-style {
    opacity: 0;
    scale: 0.5;
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@keyframes loading {
  0% {
    background-color: oklch(89.2% 0.058 10.001);
    opacity: 0.3;
  }
  100% {
    background-color: oklch(89.2% 0.058 10.001);
    opacity: 0.9;
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-space-y-reverse: 0;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-duration: initial;
      --tw-ease: initial;
    }
  }
}
